{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/damiangianni/Documents/Workspace/que-cocino/pages/recipes/index.js\";\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from \"@material-ui/core/Box\";\nimport t from '../../utils/translation';\nimport { Typography } from '@material-ui/core';\nimport { getRecipesByType } from \"../../resources/recipes\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(12, 1fr)',\n      gridGap: theme.spacing(3)\n    },\n    paper: {\n      padding: theme.spacing(1),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      whiteSpace: 'nowrap',\n      marginBottom: theme.spacing(1)\n    },\n    divider: {\n      margin: theme.spacing(2, 0)\n    },\n    icon: {\n      fontSize: '60px'\n    }\n  };\n});\nexport default (function () {\n  var _useState = useState(true),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(true),\n      recipes = _useState2[0],\n      setRecipes = _useState2[1];\n\n  var classes = useStyles(); // De forma similar a componentDidMount y componentDidUpdate\n\n  useEffect(function () {\n    var router = useRouter();\n    var typeOfFood = router.query.typeOfFood;\n\n    var callApi = function callApi() {\n      var response;\n      return _regeneratorRuntime.async(function callApi$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getRecipesByType(typeOfFood));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(setRecipes(response));\n\n            case 5:\n              setLoading(false);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    callApi();\n  });\n  return __jsx(React.Fragment, null, loading && __jsx(LinearProgress, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }\n  }), __jsx(Container, {\n    maxWidth: \"lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }\n  }, !loading && __jsx(React.Fragment, null, __jsx(Box, {\n    my: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    component: \"h1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 8\n    }\n  }, t('recipes'))), __jsx(Box, {\n    my: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(Paper, {\n    className: classes.paper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 8\n    }\n  }, recipes.map(function (r) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 10\n      }\n    }, \"sss\");\n  }))))));\n});","map":{"version":3,"sources":["/Users/damiangianni/Documents/Workspace/que-cocino/pages/recipes/index.js"],"names":["React","useState","useEffect","useRouter","makeStyles","Container","Grid","Paper","LinearProgress","Box","t","Typography","getRecipesByType","useStyles","theme","container","display","gridTemplateColumns","gridGap","spacing","paper","padding","textAlign","color","palette","text","secondary","whiteSpace","marginBottom","divider","margin","icon","fontSize","loading","setLoading","recipes","setRecipes","classes","router","typeOfFood","query","callApi","response","map","r"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,CAAP,MAAc,yBAAd;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AAEA,IAAMC,SAAS,GAAGT,UAAU,CAAC,UAAAU,KAAK;AAAA,SAAK;AACtCC,IAAAA,SAAS,EAAE;AACVC,MAAAA,OAAO,EAAE,MADC;AAEVC,MAAAA,mBAAmB,EAAE,iBAFX;AAGVC,MAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd;AAHC,KAD2B;AAMtCC,IAAAA,KAAK,EAAE;AACNC,MAAAA,OAAO,EAAEP,KAAK,CAACK,OAAN,CAAc,CAAd,CADH;AAENG,MAAAA,SAAS,EAAE,QAFL;AAGNC,MAAAA,KAAK,EAAET,KAAK,CAACU,OAAN,CAAcC,IAAd,CAAmBC,SAHpB;AAINC,MAAAA,UAAU,EAAE,QAJN;AAKNC,MAAAA,YAAY,EAAEd,KAAK,CAACK,OAAN,CAAc,CAAd;AALR,KAN+B;AAatCU,IAAAA,OAAO,EAAE;AACRC,MAAAA,MAAM,EAAEhB,KAAK,CAACK,OAAN,CAAc,CAAd,EAAiB,CAAjB;AADA,KAb6B;AAgBtCY,IAAAA,IAAI,EAAE;AACLC,MAAAA,QAAQ,EAAE;AADL;AAhBgC,GAAL;AAAA,CAAN,CAA5B;AAqBA,gBAAe,YAAM;AAAA,kBACU/B,QAAQ,CAAC,IAAD,CADlB;AAAA,MACbgC,OADa;AAAA,MACJC,UADI;;AAAA,mBAEUjC,QAAQ,CAAC,IAAD,CAFlB;AAAA,MAEbkC,OAFa;AAAA,MAEJC,UAFI;;AAGpB,MAAMC,OAAO,GAAGxB,SAAS,EAAzB,CAHoB,CAKpB;;AACAX,EAAAA,SAAS,CAAC,YAAM;AACf,QAAMoC,MAAM,GAAGnC,SAAS,EAAxB;AADe,QAEPoC,UAFO,GAEQD,MAAM,CAACE,KAFf,CAEPD,UAFO;;AAGf,QAAME,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACQ7B,gBAAgB,CAAC2B,UAAD,CADxB;;AAAA;AACTG,cAAAA,QADS;AAAA;AAAA,+CAETN,UAAU,CAACM,QAAD,CAFD;;AAAA;AAGfR,cAAAA,UAAU,CAAC,KAAD,CAAV;;AAHe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAKAO,IAAAA,OAAO;AACP,GATQ,CAAT;AAWA,SACC,4BACER,OAAO,IAAI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADb,EAEC,MAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,CAACA,OAAD,IACA,4BACC,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEvB,CAAC,CAAC,SAAD,CADH,CADD,CADD,EAMC,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,KAAD;AAAO,IAAA,SAAS,EAAE2B,OAAO,CAACjB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEe,OAAO,CAACQ,GAAR,CAAY,UAAAC,CAAC;AAAA,WACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADa;AAAA,GAAb,CADF,CADD,CAND,CAFF,CAFD,CADD;AAuBA,CAxCD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from \"@material-ui/core/Box\";\nimport t from '../../utils/translation';\nimport { Typography } from '@material-ui/core';\nimport { getRecipesByType } from \"../../resources/recipes\";\n\nconst useStyles = makeStyles(theme => ({\n\tcontainer: {\n\t\tdisplay: 'grid',\n\t\tgridTemplateColumns: 'repeat(12, 1fr)',\n\t\tgridGap: theme.spacing(3),\n\t},\n\tpaper: {\n\t\tpadding: theme.spacing(1),\n\t\ttextAlign: 'center',\n\t\tcolor: theme.palette.text.secondary,\n\t\twhiteSpace: 'nowrap',\n\t\tmarginBottom: theme.spacing(1),\n\t},\n\tdivider: {\n\t\tmargin: theme.spacing(2, 0),\n\t},\n\ticon: {\n\t\tfontSize: '60px'\n\t}\n}));\n\nexport default () => {\n\tconst [loading, setLoading] = useState(true);\n\tconst [recipes, setRecipes] = useState(true);\n\tconst classes = useStyles();\n\n\t// De forma similar a componentDidMount y componentDidUpdate\n\tuseEffect(() => {\n\t\tconst router = useRouter();\n\t\tconst { typeOfFood } = router.query;\n\t\tconst callApi = async () => {\n\t\t\tconst response = await getRecipesByType(typeOfFood);\n\t\t\tawait setRecipes(response);\n\t\t\tsetLoading(false);\n\t\t};\n\t\tcallApi();\n\t})\n\n\treturn (\n\t\t<>\n\t\t\t{loading && <LinearProgress />}\n\t\t\t<Container maxWidth=\"lg\">\n\t\t\t\t{!loading &&\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Box my={2}>\n\t\t\t\t\t\t\t<Typography variant=\"h6\" component=\"h1\">\n\t\t\t\t\t\t\t\t{t('recipes')}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box my={1}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t{recipes.map(r => (\n\t\t\t\t\t\t\t\t\t<div>sss</div>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</Container>\n\t\t</>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}