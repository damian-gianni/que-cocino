{"ast":null,"code":"var _jsxFileName = \"/Users/damiangianni/Documents/Workspace/que-cocino/pages/recipes/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from \"@material-ui/core/Box\";\nimport t from '../../utils/translation';\nimport { Typography } from '@material-ui/core';\nimport { getRecipesByType } from \"../../resources/recipes\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(12, 1fr)',\n    gridGap: theme.spacing(3)\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    whiteSpace: 'nowrap',\n    marginBottom: theme.spacing(1)\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  icon: {\n    fontSize: '60px'\n  }\n}));\nexport default (() => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: tof,\n    1: setTOF\n  } = useState('');\n  const {\n    0: recipes,\n    1: setRecipes\n  } = useState(true);\n  const classes = useStyles();\n  const router = useRouter();\n  const {\n    typeOfFood\n  } = router.query;\n  setTOF(typeOfFood); // De forma similar a componentDidMount y componentDidUpdate\n\n  useEffect(() => {\n    const callApi = async () => {\n      const response = await getRecipesByType(tof);\n      await setRecipes(response);\n      setLoading(false);\n    };\n\n    callApi();\n  }, []);\n  return __jsx(React.Fragment, null, loading && __jsx(LinearProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }\n  }), __jsx(Container, {\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }\n  }, !loading && __jsx(React.Fragment, null, __jsx(Box, {\n    my: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    component: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 8\n    }\n  }, t('recipes'))), __jsx(Box, {\n    my: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, __jsx(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 8\n    }\n  }, recipes.map(r => __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 10\n    }\n  }, \"sss\")))))));\n});","map":{"version":3,"sources":["/Users/damiangianni/Documents/Workspace/que-cocino/pages/recipes/index.js"],"names":["React","useState","useEffect","useRouter","makeStyles","Container","Grid","Paper","LinearProgress","Box","t","Typography","getRecipesByType","useStyles","theme","container","display","gridTemplateColumns","gridGap","spacing","paper","padding","textAlign","color","palette","text","secondary","whiteSpace","marginBottom","divider","margin","icon","fontSize","loading","setLoading","tof","setTOF","recipes","setRecipes","classes","router","typeOfFood","query","callApi","response","map","r"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from \"@material-ui/core/Box\";\nimport t from '../../utils/translation';\nimport { Typography } from '@material-ui/core';\nimport { getRecipesByType } from \"../../resources/recipes\";\n\nconst useStyles = makeStyles(theme => ({\n\tcontainer: {\n\t\tdisplay: 'grid',\n\t\tgridTemplateColumns: 'repeat(12, 1fr)',\n\t\tgridGap: theme.spacing(3),\n\t},\n\tpaper: {\n\t\tpadding: theme.spacing(1),\n\t\ttextAlign: 'center',\n\t\tcolor: theme.palette.text.secondary,\n\t\twhiteSpace: 'nowrap',\n\t\tmarginBottom: theme.spacing(1),\n\t},\n\tdivider: {\n\t\tmargin: theme.spacing(2, 0),\n\t},\n\ticon: {\n\t\tfontSize: '60px'\n\t}\n}));\n\nexport default () => {\n\tconst [loading, setLoading] = useState(true);\n\tconst [tof, setTOF] = useState('');\n\tconst [recipes, setRecipes] = useState(true);\n\tconst classes = useStyles();\n\n\tconst router = useRouter();\n\tconst { typeOfFood } = router.query;\n\n\tsetTOF(typeOfFood)\n\t// De forma similar a componentDidMount y componentDidUpdate\n\tuseEffect(() => {\n\n\t\tconst callApi = async () => {\n\t\t\tconst response = await getRecipesByType(tof);\n\t\t\tawait setRecipes(response);\n\t\t\tsetLoading(false);\n\t\t};\n\n\t\tcallApi();\n\t}, [])\n\n\treturn (\n\t\t<>\n\t\t\t{loading && <LinearProgress />}\n\t\t\t<Container maxWidth=\"lg\">\n\t\t\t\t{!loading &&\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Box my={2}>\n\t\t\t\t\t\t\t<Typography variant=\"h6\" component=\"h1\">\n\t\t\t\t\t\t\t\t{t('recipes')}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box my={1}>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t{recipes.map(r => (\n\t\t\t\t\t\t\t\t\t<div>sss</div>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t</Container>\n\t\t</>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}